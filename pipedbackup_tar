#!/bin/bash

mkdir ~/.pipedroid 2> /dev/null
CFG=~/.pipedroid
touch ${CFG}/pipedroid.log

function debug {
    echo "$1" | while read line;
        do 
        echo "$(date +%T) pipedbackup_tar: $line" >> ${CFG}/pipedroid.log
    done
    if [ -e "${CFG}/debug" ];
        then
        echo "$1" 1>&2
    fi
}

case $1 in
    "-h")
        echo -e "Usage: pipedbackup_tar [remote_source] [local_dest] [decompress|recompress|keep_compressed|no_compression]"
        exit 0
    ;;
    "--help")
        echo -e "Usage: pipedbackup_tar [remote_source] [local_dest] [decompress|recompress|keep_compressed|no_compression]"
        exit 0
    ;;
esac

echo "" >> ${CFG}/pipedroid.log
debug "Started."

remotes="$1"
locald="$2"
compression="$3" #"$(echo "$3" | sed 's/[^a-zA-Z_]//g')"

debug "Remote source: $remotes"
debug "Local destination: $locald"
debug "Compression method: $compression"

rm "$locald" > /dev/null
if grep -qE "keep_compressed|recompress" <<< "$compression"
    then
    if [ "$locald" != "*gz" ]
        then
        locald="${locald}.gz"
        rm "$locald" > /dev/null
    fi
fi

# Determine if "su" exists or if we're already root
if grep -q "abcdef" <<< "$(adb shell su -c "echo abcdef")"
    then
    su="su"
else
    su="sh"
fi

echo "Calculating backup size... this might take a while."
size="$(adb shell $su -c "du -s \"${remotes}/\"" | awk {print $1;} | sed 's/[^0-9]//g')"
if [ "$size" == "" ]
    then
    size=0
fi

echo "Receiving backup from Android device, please wait..."
echo

if [ "$compression" != "no_compression" ]
    then
    (
        adb forward tcp:5455 tcp:5455
        adb shell $su -c "mkfifo /cache/pipedbackup.tar.gz"
        adb shell $su -c "tar -czf /cache/pipedbackup.tar.gz \"$remotes\"" &
        sleep 1
        adb shell $su -c "busybox dd if=/cache/pipedbackup.tar.gz |  busybox nc -l -p 5455"
        echo "( ↑↑↑ remote  ^^^ )"
    ) >> ${CFG}/pipedroid.log 2>&1 &

    sleep 1

    if [ "$compression" == "keep_compressed" ]
        then
        (
            adb forward tcp:5455 tcp:5455
            nc 127.0.0.1 5455 | pv -i 0.4 | dd of="$locald" 2>> ${CFG}/pipedroid.log
            echo "( ↑↑↑ local  ^^^ )" >> ${CFG}/pipedroid.log
        )
    elif [ "$compression" == "decompress" ]
        then
        (
            adb forward tcp:5455 tcp:5455
            nc 127.0.0.1 5455 | gunzip | pv -s $size -i 0.4 | dd of="$locald" 2>> ${CFG}/pipedroid.log
            echo "( ↑↑↑ local  ^^^ )" >> ${CFG}/pipedroid.log
        )
    else
        (
            adb forward tcp:5455 tcp:5455
            nc 127.0.0.1 5455 | gunzip | pv -s $size -i 0.4 | gzip | dd of="$locald" 2>> ${CFG}/pipedroid.log
            echo "( ↑↑↑ local  ^^^ )" >> ${CFG}/pipedroid.log
        )
    fi

    adb shell $su -c "rm /cache/pipedbackup.tar.gz" >> ${CFG}/pipedroid.log 2>&1

else
    (
        adb forward tcp:5455 tcp:5455
        adb shell $su -c "mkfifo /cache/pipedbackup.tar"
        adb shell $su -c "tar -cf /cache/pipedbackup.tar \"$remotes\"" &
        sleep 1
        adb shell $su -c "busybox dd if=/cache/pipedbackup.tar |  busybox nc -l -p 5455"
        echo "( ↑↑↑ remote  ^^^ )"
    ) >> ${CFG}/pipedroid.log 2>&1 &

    sleep 1

    (
        adb forward tcp:5455 tcp:5455
        nc 127.0.0.1 5455 | pv -s $size -i 0.4 | dd of="$locald" 2>> ${CFG}/pipedroid.log
        echo "( ↑↑↑ local  ^^^ )" >> ${CFG}/pipedroid.log
    )

    adb shell $su -c "rm /cache/pipedbackup.tar" >> ${CFG}/pipedroid.log 2>&1
fi

echo "Checking checksums..."

if grep -qe 'gzip' <<< "$(file "$locald")"
    then
    csl="$(cat "$locald" | gunzip | md5sum | awk '{print $1;}')"
else
    csl="$(md5sum "$locald" | awk '{print $1;}' )"
fi
echo "Local: $csl"

csr="$(adb shell $su -c "md5sum \"$remotes\"" | awk '{print $1;}')"

if grep -qe "^${csl}\$" <<< "$csr"
    then
    echo "Remote: ${csr} - match. Backup successful."
    debug "Success. Checksums match (${csl})"
    if [ "$4" == "--pause" ]
        then
        read
    fi
    exit 0
else
    echo -n "Remote: ${csr}"
    echo " - do NOT match! ERROR." 1>&2
    echo "Run the program again. If this occurs again, report a bug on GitHub. Attach the log." 1>&2
    debug "Local image checksum:    ${csl}"
    debug "Remote device checksum:  ${csr}"
    debug "Checksums do not match! Backup unsuccessful!"
    if [ "$4" == "--pause" ]
        then
        read
    fi
    exit 1
fi