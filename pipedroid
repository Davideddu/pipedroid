#!/bin/bash

mkdir "~/.pipedroid" 2> /dev/null
CFG="~/.pipedroid"

function debug {
    echo "$1" | while read line;
        do 
        echo "$(date +%T) pipedroid: $line" >> "${CFG}/pipedroid.log"
    done
    if [ -e "${CFG}/debug" ];
        then
        echo "$1"
    fi
}

echo -e "\n\n" >> "${CFG}/pipedroid.log"
date >> "${CFG}/pipedroid.log"
echo "Using $CFG as config directory."

debug "Looking for EasyBashGUI..."
source easybashgui || (echo "EBG not found. Get it from here: https://github.com/BashGui/easybashgui"; exit 1)

wait_for "Restarting ADB..."
adb kill-server
adb start-server
terminate_wait_for

message "Please disconnect ALL Android devices EXCEPT the one you want to back up.\nPlease also make sure all network-ADB devices are disconnected.\nIf you need to connect one, do it NOW and disconnect all USB devices.\nAlso, if you're not running CyanogenMod, make sure the device is rooted, BusyBox is installed and ADB is enabled.\nIf you're in recovery, either make sure the partition you want to backup is mounted or you know it's device path.\n\n$(adb devices)\n\n(if this window is too long, use Alt+Drag to move it and reach the Ok button on the bottom."

wait_for "Checking root..."
adb shell su -c "ls / > /dev/null"
exco="$?"
terminate_wait_for

if [ "$exco" != "0" ];
    then
    question "You're device seems not rooted.\n\nIs that a mistake? If you think it's a mistake, click Yes/Ok to go on anyway at your own risk."
    answer="${?}"
    if [ ${answer} -eq 0 ]
        then
        debug "User says the device is rooted."
    else
        debug "Device was not rooted."
        exit 1
    fi
else
    debug "The device is rooted."
fi

ok_message "In the next dialog you'll be given the list of mountpoints in your device. Select the partition you want to backup.\n\nPlease note that in newer Android devices the internal storage is located inside of the userdata partition, in the following path: /data/media/0"

partlist="$(adb shell mount | awk '{print $1,$2;}' | grep -e  ^/dev | grep -v fuse)"

OLDIFS="$IFS"
IFS="$(echo -e "\n")"
menu $partlist
IFS="$OLDIFS"
part="$(awk '{print $1;}' < "${dir_tmp}/${file_tmp}")"

if [ ${part} -eq "" ]
    then
    exit 2
fi

debug "Partition choosen: ${part}"

ok_message "In the next dialog, please select the backup format (more options will be added at some point).\n\nDO NOT DOUBLE CLICK: select the menu item then press Ok (it's a bug)"

tagged_menu  "raw" "Raw filesystem image" #"tar" "Tarball"
format="$(0< "${dir_tmp}/${file_tmp}" )"

if [ ${format} -eq "" ]
    then
    exit 2
fi

debug "Backup format choosen: ${format}"

ok_message "In the next dialog, please choose the compression method you prefer.\n\nDO NOT DOUBLE CLICK: select the menu item then press Ok (it's a bug)"

tagged_menu "decompress" "Compress remotely, decompress locally (recommended)" "keep_compressed" "Compress remotely, keep compressed (can't monitor progress)" "no_compression" "No compression at all (slow)"
compression="$(0< "${dir_tmp}/${file_tmp}" )"

debug "Compression method: ${compression}"

ok_message "In the next dialog select the destination file."

fselect
dest="$(0< "${dir_tmp}/${file_tmp}" )"

if [ ${dest} -eq "" ]
    then
    exit 2
fi

debug "Output file: ${dest}"

question "This is the last confirmation before actually starting the backup. Here's the information collected:\n\nPartition: ${part}\nFormat: ${format}\nCompression method: ${compression}\nOutput: ${dest}\n\nIs the information correct?\nClick Ok/Yes to start the backup."
answer="${?}"
if [ ! ${answer} -eq 0 ]
    then
    message "Please run the program again if the info was not correct."
    debug "Aborted."
    exit 2
fi

# If we're here, then everything went ok.

debug "Starting backup."

if [ ${gz} -eq "true" ]
    then
    dest="${dest}.gz"
fi

xterm -geometry 100x3+400+200 -T "PipeDroid Backup" -e pipedroid_img "${part}" "${dest}" "${compression}"